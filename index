<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Heures Suppl√©mentaires</title>
    <link rel="manifest" href="data:application/json;base64,eyJuYW1lIjoiSGV1cmVzIFN1cCIsInNob3J0X25hbWUiOiJIZXVyZXNTdXAiLCJzdGFydF91cmwiOiIuIiwiZGlzcGxheSI6InN0YW5kYWxvbmUiLCJiYWNrZ3JvdW5kX2NvbG9yIjoiIzY2N2VlYSIsInRoZW1lX2NvbG9yIjoiIzY2N2VlYSIsImljb25zIjpbeyJzcmMiOiJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSFpwWlhkQ2IzZzlJakFnTUNBME9EZ2dORGc0SWo0OGNHRjBhQ0JrUFNKdE1qUTBJREUwTkdneU1EWmhNVEFnTVRBZ01DQXdNUzB5TUNZdU5EWTJNVGM0TlRObE5DMUxNakF6SW0xalJuUWlMejQ4TDNOMlp6ND0iLCJzaXplcyI6IjUxMng1MTIiLCJ0eXBlIjoiaW1hZ2Uvc3ZnK3htbCJ9XX0=">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 400px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            color: #333;
            margin-bottom: 10px;
            font-size: 28px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .header p {
            color: #666;
            font-size: 14px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 12px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: rgba(255,255,255,0.9);
        }

        input:focus {
            outline: none;
            border-color: #667eea;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);
        }

        .time-inputs {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .summary {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #667eea;
            transform: translateY(0);
            transition: all 0.3s ease;
        }

        .summary.show {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);
        }

        .summary h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            font-size: 14px;
            padding: 4px 0;
        }

        .summary-row.highlight {
            font-weight: bold;
            color: #667eea;
            font-size: 16px;
            border-top: 1px solid #e1e5e9;
            padding-top: 12px;
            margin-top: 12px;
        }

        .btn {
            width: 100%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px;
            border-radius: 15px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn:disabled {
            background: #cbd5e0;
            cursor: not-allowed;
            transform: none;
        }

        .btn:active {
            transform: translateY(0);
        }

        .feedback {
            margin-top: 20px;
            padding: 15px;
            border-radius: 15px;
            text-align: center;
            font-weight: 500;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.4s ease;
        }

        .feedback.show {
            opacity: 1;
            transform: translateY(0);
        }

        .feedback.success {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
        }

        .feedback.error {
            background: linear-gradient(135deg, #f56565, #e53e3e);
            color: white;
        }

        @media (max-width: 480px) {
            .container {
                margin: 0;
                border-radius: 0;
                min-height: 100vh;
                padding: 20px;
            }
            
            body {
                padding: 0;
            }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>‚è∞ Heures Suppl√©mentaires</h1>
            <p>Saisissez vos horaires du jour</p>
        </div>

        <form id="timeForm">
            <div class="form-group">
                <label for="date">üìÖ Date</label>
                <input type="date" id="date" name="date" required>
            </div>

            <div class="time-inputs">
                <div class="form-group">
                    <label for="start">üïê Heure d√©but</label>
                    <input type="time" id="start" name="start" required>
                </div>
                <div class="form-group">
                    <label for="end">üïï Heure fin</label>
                    <input type="time" id="end" name="end" required>
                </div>
            </div>

            <div class="form-group">
                <label for="notes">üìù Notes (optionnel)</label>
                <input type="text" id="notes" name="notes" placeholder="Projet, mission...">
            </div>

            <div class="summary" id="summary" style="display: none;">
                <h3>üìä R√©sum√© automatique</h3>
                <div class="summary-row">
                    <span>Temps de pr√©sence :</span>
                    <span id="presenceTime">-</span>
                </div>
                <div class="summary-row">
                    <span>Heures travaill√©es :</span>
                    <span id="workedHours">-</span>
                </div>
                <div class="summary-row">
                    <span>Heures normales :</span>
                    <span id="normalHours">-</span>
                </div>
                <div class="summary-row highlight">
                    <span>‚ú® Heures suppl√©mentaires :</span>
                    <span id="overtimeHours">-</span>
                </div>
            </div>

            <button type="submit" class="btn" id="submitBtn">
                üì§ Enregistrer dans Google Sheets
            </button>
        </form>

        <div class="feedback" id="feedback"></div>
    </div>

    <script>
        // Configuration
        const SPREADSHEET_ID = '1OVZt5fU-FrA8xsoec5Sq7e_HH--aZsK3hUGSQ35Ekbg';
        const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbwYZz2W15sHjf63n9AkKzfEUqGH-aLHFHCK9kRBee8g_AsKyjwaW-DhjtwqOMu1t78vsQ/exec';
        const NORMAL_HOURS = 8.4; // 8h24min
        const BREAK_DURATION = 0.5; // 30min

        // Elements
        const form = document.getElementById('timeForm');
        const dateInput = document.getElementById('date');
        const startInput = document.getElementById('start');
        const endInput = document.getElementById('end');
        const notesInput = document.getElementById('notes');
        const summaryDiv = document.getElementById('summary');
        const submitBtn = document.getElementById('submitBtn');
        const feedback = document.getElementById('feedback');

        // Set today's date by default
        dateInput.valueAsDate = new Date();

        // Calculate hours when time inputs change
        startInput.addEventListener('change', calculateHours);
        endInput.addEventListener('change', calculateHours);

        function calculateHours() {
            const start = startInput.value;
            const end = endInput.value;

            if (start && end) {
                const startTime = new Date(`2000-01-01T${start}`);
                const endTime = new Date(`2000-01-01T${end}`);
                
                // Handle next day scenarios
                if (endTime < startTime) {
                    endTime.setDate(endTime.getDate() + 1);
                }

                const presenceHours = (endTime - startTime) / (1000 * 60 * 60);
                const workedHours = Math.max(0, presenceHours - BREAK_DURATION);
                const normalHours = Math.min(workedHours, NORMAL_HOURS);
                const overtimeHours = Math.max(0, workedHours - NORMAL_HOURS);

                // Update display
                document.getElementById('presenceTime').textContent = formatHours(presenceHours);
                document.getElementById('workedHours').textContent = formatHours(workedHours);
                document.getElementById('normalHours').textContent = formatHours(normalHours);
                document.getElementById('overtimeHours').textContent = formatHours(overtimeHours);

                summaryDiv.style.display = 'block';
                setTimeout(() => summaryDiv.classList.add('show'), 100);
            } else {
                summaryDiv.style.display = 'none';
                summaryDiv.classList.remove('show');
            }
        }

        function formatHours(hours) {
            const h = Math.floor(hours);
            const m = Math.round((hours - h) * 60);
            return `${h}h${m.toString().padStart(2, '0')}`;
        }

        function showFeedback(message, type) {
            feedback.textContent = message;
            feedback.className = `feedback ${type}`;
            setTimeout(() => feedback.classList.add('show'), 100);
            
            setTimeout(() => {
                feedback.classList.remove('show');
            }, 4000);
        }

        // Form submission
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            if (!startInput.value || !endInput.value) {
                showFeedback('‚ö†Ô∏è Veuillez remplir les heures de d√©but et fin', 'error');
                return;
            }
            
            submitBtn.disabled = true;
            submitBtn.textContent = '‚è≥ Envoi en cours...';
            submitBtn.classList.add('pulse');
            
            try {
                // Calculate all values
                const start = startInput.value;
                const end = endInput.value;
                const startTime = new Date(`2000-01-01T${start}`);
                const endTime = new Date(`2000-01-01T${end}`);
                
                if (endTime < startTime) {
                    endTime.setDate(endTime.getDate() + 1);
                }

                const presenceHours = (endTime - startTime) / (1000 * 60 * 60);
                const workedHours = Math.max(0, presenceHours - BREAK_DURATION);
                const normalHours = Math.min(workedHours, NORMAL_HOURS);
                const overtimeHours = Math.max(0, workedHours - NORMAL_HOURS);

                // Prepare data for Google Sheets
                const data = {
                    date: dateInput.value,
                    start: start,
                    end: end,
                    presenceHours: presenceHours,
                    workedHours: workedHours,
                    normalHours: normalHours,
                    overtimeHours: overtimeHours,
                    notes: notesInput.value
                };

                // Send using hidden form (most reliable method)
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = SCRIPT_URL;
                form.target = 'hiddenFrame';
                form.style.display = 'none';

                // Create hidden iframe to receive response
                let iframe = document.getElementById('hiddenFrame');
                if (!iframe) {
                    iframe = document.createElement('iframe');
                    iframe.name = 'hiddenFrame';
                    iframe.id = 'hiddenFrame';
                    iframe.style.display = 'none';
                    document.body.appendChild(iframe);
                }

                // Add data to form
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'data';
                input.value = JSON.stringify(data);
                form.appendChild(input);

                document.body.appendChild(form);
                form.submit();
                document.body.removeChild(form);

                // Show success message
                const monthNames = ['Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin',
                                   'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'];
                const date = new Date(data.date);
                const monthYear = monthNames[date.getMonth()] + ' ' + date.getFullYear();
                
                showFeedback(`‚úÖ Heures enregistr√©es dans l'onglet "${monthYear}" !`, 'success');
                
                // Reset form after success
                setTimeout(() => {
                    form.reset();
                    summaryDiv.style.display = 'none';
                    summaryDiv.classList.remove('show');
                    dateInput.valueAsDate = new Date();
                }, 2000);
                
            } catch (error) {
                console.error('Error:', error);
                showFeedback('‚ùå Erreur lors de l\'envoi. R√©essayez dans quelques secondes.', 'error');
            }
            
            submitBtn.disabled = false;
            submitBtn.textContent = 'üì§ Enregistrer dans Google Sheets';
            submitBtn.classList.remove('pulse');
        });

        // Initial calculation if fields are prefilled
        calculateHours();

        // Register service worker for PWA capabilities
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('data:text/javascript;base64,').catch(() => {});
        }
    </script>
</body>
</html>
